{
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "attach",
            "name": "Attach to Chrome",
            "port": 9222,
            "trace": true,
            "timeout": 1000,
            "smartStep": true,
            "webRoot": "${workspaceFolder}",
            "skipFiles": [
                "${workspaceRoot}/node_modules/**/*.js",
                "<node_internals>/**/*.js",
                "${workspaceRoot}\\node_modules/**\\*.js",     
                "file:\\webpack\\bootstrap",
                "file:///webpack/bootstrap",
                "webpack:///webpack/bootstrap",
                "webpack\\bootstrap"
            ],
        },
        {
            // Name of configuration; appears in the launch configuration drop down menu.
            "name": "Debug Mocha",
            // Type of configuration. Possible values: "node", "mono".
            "type": "node",
            // Request type "launch" or "attach"
            "request": "launch",
            // Workspace relative or absolute path to the program.
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program (mocha in this case).
            "args": ["--opts", "mocha.opts", "--require", "@babel/register", "--no-timeouts", "test/**/*.js"],
            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
            "cwd": "${workspaceRoot}",            
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            "sourceMaps": true,
            // if you don't want to step into the source files for debugging
            // then set this to true 
            "smartStep": false,        
            // Environment variables passed to the program.
            "env": {"DEBUG" : "true"},
            "skipFiles": [
                "${workspaceRoot}/node_modules/**/*.js",
                "<node_internals>/**/*.js",
            ],
        },
        {
            "type": "node",
            "request": "attach",
            "name": "Attach by Process ID",
            "processId": "${command:PickProcess}",
            "protocol": "inspector",
            "smartStep": true,
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.{.js.map}"
            ],
            "skipFiles": [
                "${workspaceRoot}/node_modules/**/*.js",
                "<node_internals>/**/*.js",
                "*.hbs",
                "webpack:///webpack/bootstrap",
                "webpack:\\webpack\\bootstrap",
                "webpack://webpack/bootstrap",
                "webpack/bootstrap",
            ],
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Dev",
            "smartStep": true,
            "program": "${workspaceFolder}/src/index.js",
            "skipFiles": [
                "${workspaceRoot}/node_modules/**/*.js",
                "<node_internals>/**/*.js"
            ],
            "envFile": "${workspaceFolder}/.env",
            "env": {
                "NODE_ENV" : "development",
                "DEBUG" : "false"        
            },
            "runtimeArgs": [
                "--lazy",
                "--require",
                "@babel/register"
            ],
            "outFiles": [
                "${workspaceRoot}/dist/*.{js,.js.map}"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Prod",
            "smartStep": true,
            "program": "${workspaceFolder}/dist/server.js",
            "skipFiles": [
                "${workspaceRoot}/node_modules/**/*.js",
                "<node_internals>/**/*.js"
            ],
            "envFile": "${workspaceFolder}/.env",
            "env": {                
                "NODE_ENV" : "production",
                "DEBUG" : "false"
            },

        },
    ]
}